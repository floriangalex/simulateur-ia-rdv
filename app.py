import streamlit as st
from openai import OpenAI

# Configuration de la cl√© via les secrets Streamlit
client = OpenAI(api_key=st.secrets["OPENAI_API_KEY"])

# Configuration de la page
st.set_page_config(page_title="Simulateur IA - RDV Beaut√©", page_icon="üí¨")
st.title("üí¨ Simulateur IA - Prise de rendez-vous beaut√©")
st.caption("Teste ici les r√©ponses de l‚Äôassistante virtuelle, comme si tu √©tais une cliente sur WhatsApp üå∏")

# Fonction IA (GPT)
def get_ai_response(message):
    system_prompt = (
        "Tu es l‚Äôassistante virtuelle de L√©a, une prestataire beaut√© sp√©cialis√©e dans les poses de cils. "
        "Tu r√©ponds √† ses clientes sur WhatsApp. "
        "Tu es douce, chaleureuse, rassurante, et tu t‚Äôexprimes toujours comme une vraie personne. "
        "Voici les prestations propos√©es :\n"
        "- Pose Classique (50‚Ç¨, acompte 10‚Ç¨)\n"
        "- Pose Mixte (60‚Ç¨, acompte 10‚Ç¨)\n"
        "- D√©pose (20‚Ç¨, acompte 5‚Ç¨)\n"
        "- Retouche (30‚Ç¨, acompte 5‚Ç¨)\n"
        "Elle est disponible jeudi √† 14h ou vendredi √† 16h. "
        "Si la cliente veut r√©server, propose un cr√©neau et explique le syst√®me d‚Äôacompte. "
        "N'envoie le lien de paiement que si elle dit 'carte' ou 'paypal'. "
        "Ne dis jamais que tu es une IA."
    )

    response = client.chat.completions.create(
        model="gpt-4-1106-preview",
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": message}
        ]
    )
    return response.choices[0].message.content

# Interface utilisateur (formulaire)
with st.form("chat_form"):
    user_message = st.text_input(
        "Message cliente (WhatsApp simul√©)", 
        placeholder="Ex: Je veux r√©server une pose mixte vendredi"
    )
    submitted = st.form_submit_button("Envoyer")

# R√©ponse IA affich√©e
if submitted and user_message:
    st.markdown("**R√©ponse IA :**")
    with st.spinner("L'assistante r√©pond..."):
        try:
            st.success(get_ai_response(user_message))
        except Exception as e:
            st.error(f"Erreur : {str(e)}")

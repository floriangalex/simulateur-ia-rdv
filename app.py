import streamlit as st
import openai

# Configuration de la clÃ© API depuis les secrets
openai.api_key = st.secrets["OPENAI_API_KEY"]

st.set_page_config(page_title="Simulateur IA - RDV BeautÃ©", page_icon="ğŸ’¬")
st.title("ğŸ’¬ Simulateur IA - Prise de rendez-vous beautÃ©")
st.caption("Teste ici les rÃ©ponses de lâ€™assistante virtuelle, comme si tu Ã©tais une cliente sur WhatsApp ğŸŒ¸")

def get_ai_response(message):
    system_prompt = (
        "Tu es lâ€™assistante virtuelle de LÃ©a, une prestataire beautÃ©. "
        "Tu rÃ©ponds Ã  ses clientes sur WhatsApp. "
        "Tu es douce, naturelle, rassurante et trÃ¨s professionnelle. "
        "Voici les prestations disponibles : "
        "- Pose Classique (50â‚¬, acompte 10â‚¬) "
        "- Pose Mixte (60â‚¬, acompte 10â‚¬) "
        "- DÃ©pose (20â‚¬, acompte 5â‚¬) "
        "- Retouche (30â‚¬, acompte 5â‚¬) "
        "Elle est dispo jeudi Ã  14h ou vendredi Ã  16h. "
        "Propose toujours des rÃ©ponses utiles, bienveillantes et simples. "
        "Ne dis jamais que tu es une IA."
    )

    response = openai.ChatCompletion.create(
        model="gpt-4-1106-preview",
        temperature=0.7,
        messages=[
            {"role": "system", "content": system_prompt},
            {"role": "user", "content": message}
        ]
    )
    return response.choices[0].message.content

# UI
with st.form("chat_form"):
    user_message = st.text_input("Message cliente (WhatsApp simulÃ©)", placeholder="Ex: Je veux rÃ©server une pose mixte vendredi")
    submitted = st.form_submit_button("Envoyer")

if submitted and user_message:
    st.markdown("**RÃ©ponse IA :**")
    with st.spinner("L'assistante rÃ©pond..."):
        st.success(get_ai_response(user_message))
